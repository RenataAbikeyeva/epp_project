#! python
import os

algorithms = [
    "pygmo_de1220",
    "pygmo_sade",
    "pygmo_pso",
    "pygmo_pso_gen",
    "pygmo_bee_colony",
    "pygmo_cmaes",
    "pygmo_xnes",
    "pygmo_ihs",
    "pygmo_sea",
    "pygmo_de",
    "scipy_SLSQP",
    "scipy_TNC",
    "scipy_L-BFGS-B",
    "nlopt_auglag_eq",
    "nlopt_auglag",
    "nlopt_newuoa",
    "nlopt_newuoa_bound",
    "nlopt_neldermead",
    "nlopt_sbplx",
    "nlopt_cobyla",
    "nlopt_bobyqa",
]


def build(ctx):

    for alg in algorithms:

        ctx(
            features="run_py_script",
            source="run_optimizer_benchmarks.py",
            deps=[
                ctx.path_to(ctx, "IN_MODEL_CODE", "criterion_functions.py"),
                ctx.path_to(ctx, "IN_MODEL_SPECS", "constraints.json"),
                ctx.path_to(ctx, "IN_MODEL_SPECS", "algorithms.json"),
                ctx.path_to(ctx, "IN_MODEL_SPECS", "start_params_constr.json"),
                ctx.path_to(ctx, "IN_MODEL_SPECS", "constr_without_bounds.json"),
            ],
            target=[ctx.path_to(ctx, "OUT_ANALYSIS", f"calculated_{alg}.csv")],
            append=alg,
        )

    ctx(
        features="run_py_script",
        source="concat_results.py",
        deps=[
            ctx.path_to(ctx, "OUT_ANALYSIS", "calculated_pygmo_de1220.csv"),
            ctx.path_to(ctx, "OUT_ANALYSIS", "calculated_pygmo_sade.csv"),
            ctx.path_to(ctx, "OUT_ANALYSIS", "calculated_pygmo_pso.csv"),
            ctx.path_to(ctx, "OUT_ANALYSIS", "calculated_pygmo_pso_gen.csv"),
            ctx.path_to(ctx, "OUT_ANALYSIS", "calculated_pygmo_bee_colony.csv"),
            ctx.path_to(ctx, "OUT_ANALYSIS", "calculated_pygmo_cmaes.csv"),
            ctx.path_to(ctx, "OUT_ANALYSIS", "calculated_pygmo_xnes.csv"),
            ctx.path_to(ctx, "OUT_ANALYSIS", "calculated_pygmo_ihs.csv"),
            ctx.path_to(ctx, "OUT_ANALYSIS", "calculated_pygmo_sea.csv"),
            ctx.path_to(ctx, "OUT_ANALYSIS", "calculated_pygmo_de.csv"),
            ctx.path_to(ctx, "OUT_ANALYSIS", "calculated_scipy_SLSQP.csv"),
            ctx.path_to(ctx, "OUT_ANALYSIS", "calculated_scipy_TNC.csv"),
            ctx.path_to(ctx, "OUT_ANALYSIS", "calculated_scipy_L-BFGS-B.csv"),
            ctx.path_to(ctx, "OUT_ANALYSIS", "calculated_nlopt_auglag_eq.csv"),
            ctx.path_to(ctx, "OUT_ANALYSIS", "calculated_nlopt_auglag.csv"),
            ctx.path_to(ctx, "OUT_ANALYSIS", "calculated_nlopt_newuoa.csv"),
            ctx.path_to(ctx, "OUT_ANALYSIS", "calculated_nlopt_newuoa_bound.csv"),
            ctx.path_to(ctx, "OUT_ANALYSIS", "calculated_nlopt_neldermead.csv"),
            ctx.path_to(ctx, "OUT_ANALYSIS", "calculated_nlopt_sbplx.csv"),
            ctx.path_to(ctx, "OUT_ANALYSIS", "calculated_nlopt_cobyla.csv"),
            ctx.path_to(ctx, "OUT_ANALYSIS", "calculated_nlopt_bobyqa.csv"),
        ],
        target=[ctx.path_to(ctx, "OUT_ANALYSIS", "21_calculated_df.csv")],
    )
    abspath = os.path.join(ctx.path.abspath(), "test_run_optimizer_benchmarks.py")
    ctx(
        features="run_py_script",
        source="test_run_optimizer_benchmarks.py",
        deps=[
            ctx.path_to(ctx, "IN_ANALYSIS", "true_df.csv"),
            ctx.path_to(ctx, "OUT_ANALYSIS", "21_calculated_df.csv"),
            ctx.path_to(ctx, "IN_ANALYSIS", "precisions_21_df.csv"),
            ctx.path_to(ctx, "IN_MODEL_SPECS", "constr_without_bounds_test.json"),
            ctx.path_to(ctx, "IN_MODEL_SPECS", "constr_trid.json"),
            ctx.path_to(ctx, "IN_MODEL_SPECS", "constr_rosen.json"),
        ],
        append=abspath,
    )
